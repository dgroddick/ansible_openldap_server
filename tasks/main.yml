---
- name: Enterprise Linux 7
  include: EL-7.yml
  when:
    - ansible_os_family: == "RedHat"
    - ansible_distribution_major_version|int in [6,7]

- name: Enterprise Linux 8
  include: EL-8.yml
  when:
    - ansible_os_family: == "RedHat"
    - ansible_distribution_major_version|int in [8]

- name: Set SELinux ypbind
  ansible.posix.seboolean:
    name: allow_ypbind
    persistent: yes
    state: yes

- name: Set SELinux use_ldap
  ansible.posix.seboolean:
    name: authlogin_nsswitch_use_ldap
    persistent: yes
    state: yes

- name: Start slapd service
  service:
    name: slapd
    state: started
    enabled: yes

- name: Start oddjob service
  service:
    name: oddjobd
    state: started
    enabled: yes

- name: Register slappasswd
  command: slappasswd -s "{{ slappasswd }}"
  register: ldap_hash

- name: Copy ldif
  template:
    src: "templates/{{ item.src }}"
    dest: "/tmp/{{ item.dest }}"
  with_items:
    - { src: 'db.ldif.j2', dest: 'db.ldif' }
    - { src: 'monitor.ldif.j2', dest: 'monitor.ldif' }
    - { src: 'base.ldif.j2', dest: 'base.ldif' }

- name: ldapmodify
  shell: "ldapmodify -Y EXTERNAL -H ldapi:// -f /tmp/{{ item }}"
  with_items:
    - db.ldif
    - monitor.ldif
    - base.ldif

- name: copy database config
  copy:
    src: /usr/share/openldap-servers/DB_CONFIG.example
    dest: /var/lib/ldap/DB_CONFIG
    remote_src: yes
    owner: ldap
    group: ldap

- name: setup database schemas
  shell: "ldapadd -Y EXTERNAL -H ldapi:// -f /etc/openldap/schema/{{ item }}"
  with_items:
    - cosine.ldif
    - nis.ldif
    - inetorgperson.ldif
  register: databases
  changed_when: databases

- name: Add base
  shell: ldapadd -x -W -D "cn=ldapadm,{{ base_dn }}" -f /tmp/base.ldif